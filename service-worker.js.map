{"version":3,"sources":["service-worker.ts"],"names":["additionalManifestEntries","self","__WB_MANIFEST","addEventListener","event","waitUntil","caches","open","then","cache","addAll","respondWith","match","request","response","fetch","data","type","skipWaiting"],"mappings":"MAcA,MAAM,EAA4B,idAAK,cAIvC,KAAK,iBAAiB,WAAY,IAEhC,EAAM,UACJ,OAAO,KAAK,eAAe,MAAM,GACxB,EAAM,OAAO,CAClB,IACA,cACA,iBACA,eACA,eACA,kBAEI,GAA6B,OAGtC,IAGH,KAAK,iBAAiB,SAAU,IAE9B,EAAM,YAEJ,OAAO,MAAM,EAAM,SAAS,MAAM,GAEzB,GAAY,MAAM,EAAM,WAElC,IAKH,KAAK,iBAAiB,WAAY,IAC5B,EAAM,MAA4B,iBAApB,EAAM,KAAK,MAE3B,KAAK,aACP","file":"service-worker.js","sourceRoot":"","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n/* eslint-disable no-restricted-globals, @typescript-eslint/no-unused-expressions */\n\n// This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\n\n// Verwende das generierte WB_MANIFEST\n// @ts-ignore\nconst additionalManifestEntries = self.__WB_MANIFEST;\n\n// Add the custom service worker code here.\n// Your service worker here\nself.addEventListener('install', (event) => {\n  // @ts-ignore\n  event.waitUntil(\n    caches.open('worktime-v1').then((cache) => {\n      return cache.addAll([\n        '/',\n        '/index.html',\n        '/manifest.json',\n        '/favicon.ico',\n        '/logo192.png',\n        '/logo512.png',\n        // Füge auch die automatisch generierten Einträge hinzu, wenn vorhanden\n        ...(additionalManifestEntries || [])\n      ]);\n    })\n  );\n});\n\nself.addEventListener('fetch', (event) => {\n  // @ts-ignore\n  event.respondWith(\n    // @ts-ignore\n    caches.match(event.request).then((response) => {\n      // @ts-ignore\n      return response || fetch(event.request);\n    })\n  );\n});\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    // @ts-ignore\n    self.skipWaiting();\n  }\n});\n\n// Any other custom service worker logic can go here. "]}